extends layout

block prepend projectHeader
  a.btn.btn-default.pull-right(href="#", data-action="edit-issue")
    i.fa.fa-edit
    |  edit

block append projectTitle
  |  / 
  a(href="/#{project._owner.slug}/#{project.slug}/issues") issues
  |  / 
  a(href="/#{project._owner.slug}/#{project.slug}/issues/#{issue.id}") ##{issue.id}


block content

  include partials/project-header

  h2 #{issue.name} 
    small
      .label.label-default #{issue.status}
      |  created by 
      - var person = issue._creator
      include partials/person
    
  hr

  p !{marked( issue.description , resource )}

  if (issue.type === 'dock')
    hr
    
    h4 from #{issue.data.from} to #{issue.data.to}
  
    //- TODO: convert this technique (hiding method in input var) into a module
    // bury the unsupported form methods in a hidden form value (auto-set by
    // the form generator's context) and then auto-interpret it in a server-side
    // middleware.  this is so very maki.
    form(method="post")
      input(type="hidden", name="method", value="patch")
    
      button.btn.btn-warning(name="status", value="closed") &times;
      button.btn.btn-success(name="status", value="merged") Merge

  hr

  h3 References
  .references
    each reference in issue._references
      .reference
        abbr.pull-right #{moment(reference.timestamp).fromNow()}
        a(href="/#{reference._creator.slug}") #{reference._creator.username}
        |  referenced this from 
        a(href="#{reference._issue.id}") ##{reference._issue.id}

  hr
  h3 Comments
  .comments
    each comment in issue._comments
      include partials/comment
  mixin commentForm( '/' + project._owner.slug + '/' + project.slug + '/issues/' + issue.id + '/comments' )
